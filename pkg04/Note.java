package pkg04;

public class Note {
	/*
	 swap : 2개의 변수 값을 서로 맞바꾸는 기법;
	 
	 int sul = 6;
	 int su2 = 3;
	 int temp; (임시 변수)
	 
	 temp = su1;
	 su1 = su2;
	 su2 = temp;
	 
	 별 출력하기 
		star = 12
		*****
		*****
		**

		star = 8
		*****
		****
	
		1) 별 수를 의미하는 변수(star)를 정의 및 값을 대입함.
		2) 반복문을 이용하여 
		   초기식 : int i = 1;
		   조건식 : i <= star;
		   증감식 : i++
		   
		   만약 i가 5의 배수이면 엔터키를 누른다.
		   
		3) 단순한 엔터 기능은 println()를 사용하면 됨.
		   별 출력시 엔터키는 필요가 없으므로 print() 메소드를 사용해야 한다. 
		   
	
	위 문제에서 5의 배수마다 출력 했습니다.
	1줄에 n개씩 출력이 가능하도록 변형해 보세요.
	예시) n이 4이면 한줄에 4개씩 출력합니다.
	
	1부터 10까지의 홀수와 짝수의 총합 각각 구하기
	풀이 절차
	1) 홀수와 짝수의 총합을 저장할 변수(odd, even)를 각각 정의 및 0으로 대입한다.
	2) for 반복문을 이용하여
	   초기식 : int i = 1
	   조건식 : i < 11
	   증감식 : i++
	3) 만약 i가 짝수이면 even에 값을 누적합니다.
	   그렇지 않으면 odd에다 값을 누적합니다.
	4) 짝수 / 홀수의 총합을 출력합니다.    
	
	for 구문과 switch case 구문을 이용하여 다음 문제를 풀어 보세요.
	1부터 10까지의 정수 중에서 
	sum0 = 3 + 6 + 9 = 18
	sum1 = 1 + 4 + 7 + 10 = 22
	sum2 = 2 + 5 + 8 = 15
	가 나오도록 프로그래밍
	출력 결과
	sum0 : 18
	sum1 : 22
	sum2 : 15
	
	while 구문
	
	초기식; // 초기식은 while 외부에 작성;
	while(조건식) {
		// 여기에 수행 할 작업
		증감식;
	}
	
	무한 while 루프 : 반복 회수가 정해져 있지 않을 경우에 사용하는 무한 구문
				   반드시 무한 루프를 빠져 나가기 위한 코드를 작성해야 한다.
					while(true) {
						// 수행 할 작업
						if(조건식) {
							break;
						}
					}		
		
		
		 
	
	 */
}
