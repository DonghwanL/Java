package pkg12;

public class Note {
	/*
	 패키지 
	 	유사한 여러 개의 참조 자료형(클래스, 인터페이스, 예외 등)들을 묶어 놓은 폴더의 개념
	 
	 패키지 선언
		 주석문을 제외하고 반드시 소스의 첫 줄에 와야 합니다.
		 단, 기본 패키지는 package 구문을 사용하지 않습니다.
		 package 패키지이름;
	 
	 dot 키워드
	 	.기호는 운영 체제 내에서 폴더 구분자를 의미합니다.
	 
	 import 키워드
		 특정 패키지 내의 클래스를 사용하고자 할 때 사용하는 구문입니다.
		 import 패키지경로.클래스이름;
		 *은 all classes를 의미합니다.
		 java.lang 패키지는 암시적으로 import 됩니다. 
		 단축키 : Ctrl + Shift + O(영문)
		 
	 레퍼런스 사이트
		 https://docs.oracle.com/en/java/javase/12/docs/api/index.html
		 Ctrl + F (찾기 기능)
	 
		 Constructor : 생성자
		 Flelds : 변수
		 Method : 메소드
	 
	 상속(Inheritance)
	 
	 super 키워드
	 	상속을 해주는 수퍼 클래스를 지칭하는 키워드
	 	super.변수
	 	super.메소드
	 	super() : 매개 변수가 없는 생성자
	 	super(int) : 정수 1개를 매개 변수로 하는 생성자
	 	
	 	서브 클래스의 모든 생성자에는 첫 줄에 암시적으로 super(); 구문이 숨어있음. 
	 	만약 개발자가 명시적으로 구현하면 super(); 구문은 이제 사라집니다.
	 	
	 서브가 수퍼 변수에 접근하는 여러가지 방법
	 	1. 접근 지정자를 해제하는 방법 (이 방법은 많이 쓰이지 않음)
	 	2. setter()을 사용하는 방법
	 	3. 생성자 호출을 사용하는 방법
	 	
	 상속과 생성자 간의 관계
	 	수퍼 클래스의 생성자가 먼저 호출이 됩니다.
	 	
	 오버라이딩
	 	수퍼 클래스에서 정의한 메소드의 이름을 그대로 사용하되,
	 	서브의 기준에 맞게 다시 정의하는 것을 의미합니다.
	 	수퍼와 서브의 시그니처(이름, 매개변수, 반환 타입)는 동일해야 합니다.
	 	

	 메소드 은닉화
	 	오버라이딩 하게 되면 수퍼의 메소드가 본의아니게 숨겨지는 현상
	 
	 
	 */
}
